version: '3.8'

services:
  # Directus Backend
  directus:
    image: directus/directus:11
    container_name: directus-app
    restart: unless-stopped
    ports:
      - "8055:8055"
    environment:
      KEY: ${DIRECTUS_KEY:-your-random-secret-key}
      SECRET: ${DIRECTUS_SECRET:-your-random-secret-secret}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD:-admin123}
      DB_CLIENT: ${DB_CLIENT:-pg}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-directus}
      DB_USER: ${DB_USER:-directus}
      DB_PASSWORD: ${DB_PASSWORD:-directus123}
      DB_SSL: ${DB_SSL:-false}
      CORS_ENABLED: true
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      CORS_METHODS: "GET,POST,PATCH,DELETE"
      CORS_CREDENTIALS: true
    volumes:
      - directus_uploads:/directus/uploads
      - directus_extensions:/directus/extensions
    depends_on:
      - postgres
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: directus-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-directus}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-directus123}
      POSTGRES_DB: ${DB_DATABASE:-directus}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-directus} -d ${DB_DATABASE:-directus}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nuxt Frontend
  # nuxt-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.nuxt
  #     args:
  #       NODE_ENV: development
  #   container_name: nuxt-app
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #     - "24678:24678" # For Nuxt devtools
  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/app
  #     - /app/node_modules 
  #     - /app/.nuxt
  #   depends_on:
  #     - directus
  #   networks:
  #     - app-network
  #   stdin_open: true  
  #   tty: true

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  directus_uploads:
    driver: local
  directus_extensions:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge